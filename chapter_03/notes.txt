Pseudocode is a high-level description of the problem you’re trying to solve, in code.

Recursion:
  - When you write a recursive function, you have to tell it when to stop recursing.
  - every recursive function has two parts:
      * the base case,
      * and the recursive case.
  - The recursive case is when the function calls itself.
  - The base case is when the function doesn’t call itself again (so it doesn’t go into an infinite loop).
          const countdown = (i) => {
            console.log(i);
            if(i<= 0) {       //base case
              return
            }
            countdown(i-1);   //recursive case
          }

Recap:
• Recursion is when a function calls itself.
• Every recursive function has two cases: the base case and the recursive case.
• A stack has two operations: push and pop.
• All function calls go onto the call stack.
• The call stack can get very large, which takes up a lot of memory.